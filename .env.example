# Kick MCP Server Environment Configuration Example
# Copy this file to .env and adjust values as needed

# ======================
# REQUIRED SETTINGS (Manual Installation Only)
# ======================

# OAuth Configuration
# Your application's client ID from the Kick Developer Portal
# Example: abcdef123456789
# How to obtain: Register an application at Kick's developer portal
KICK_CLIENT_ID=your_kick_client_id

# Your application's client secret from the Kick Developer Portal
# Example: abcdef123456789abcdef123456789
# Security note: Never share or commit this value to public repositories
KICK_CLIENT_SECRET=your_kick_client_secret

# Comma-separated list of authorized redirect URIs
# Example: https://yourdomain.com/kick_callback.html,http://localhost:3000/kick_callback.html
# Local development: Include http://localhost:3000/kick_callback.html for testing
# Production: Include your production domain
# Note: All URIs must be registered in the Kick Developer Portal
KICK_REDIRECT_URI=https://yourdomain.com/kick_callback.html,http://localhost:3000/kick_callback.html

# 32-byte (64 character) hex key for encrypting OAuth tokens
# Example: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
# How to generate: Use a secure random generator like `openssl rand -hex 32`
# Security note: Keep this key secure and consistent across server restarts
TOKEN_ENCRYPTION_KEY=your_32_byte_hex_key

# ======================
# SERVER CONFIGURATION
# ======================

# Server operating mode 
# - false: MCP mode (JSON-RPC over stdin/stdout) - Use for integration with MCP clients
# - true: HTTP/WebSocket server mode - Use for standalone operation or testing
# Use case: Set to false when used with Smithery or other MCP clients
HTTP_MODE=false

# Port for HTTP server (only used if HTTP_MODE=true)
# Default: 3000
# Note: Only relevant when running in HTTP mode
PORT=3000

# Node environment
# - development: Enables more verbose logging and development features
# - production: Optimizes for production use with minimal logging
# - test: Used for running test suites
NODE_ENV=development

# Logging verbosity
# - error: Only critical errors
# - warn: Errors and warnings
# - info: General operational information (recommended for production)
# - debug: Detailed debugging information (useful during development)
LOG_LEVEL=info

# ======================
# PERFORMANCE SETTINGS
# ======================

# API request timeout in milliseconds
# Default: 10000 (10 seconds)
# Use case: Increase for slow networks or complex API operations
API_TIMEOUT=10000

# Rate limit settings
# Maximum requests per minute to Kick API
# Default: 60 (1 request per second on average)
# Note: Adjust based on your application's needs and Kick's rate limits
RATE_LIMIT=60

# Time window in seconds for rate limiting
# Default: 15 (15 seconds)
# Example: With RATE_LIMIT=60 and RATE_LIMIT_WINDOW=15, allows 15 requests per 15 seconds
RATE_LIMIT_WINDOW=15

# Maximum burst requests allowed
# Default: 100
# Use case: Handles temporary spikes in request volume
RATE_LIMIT_MAX_REQUESTS=100

# Cache time-to-live in seconds
# Default: 300 (5 minutes)
# Use case: Increase for data that changes less frequently, decrease for real-time data
CACHE_TTL=300

# Cache cleanup interval in seconds
# Default: 600 (10 minutes)
# Note: Controls how often expired cache entries are removed
CACHE_CLEANUP_INTERVAL=600

# ======================
# WEBSOCKET SETTINGS
# ======================

# WebSocket ping interval in milliseconds (keepalive)
# Default: 30000 (30 seconds)
# Purpose: Keeps connections alive behind firewalls/proxies
# Note: Adjust based on your network infrastructure
WEBSOCKET_PING_INTERVAL=30000

# ======================
# IDLE TIMEOUT
# ======================

# Server idle timeout in milliseconds (5 minutes default)
# Default: 300000 (5 minutes)
# Purpose: Automatically shuts down the server after inactivity
# Use case: Set to a higher value for long-running servers, or 0 to disable
IDLE_TIMEOUT=300000

# ======================
# KICK API CONFIGURATION
# ======================

# Base URL for Kick API (usually doesn't need changing)
# Default: https://kick.com/api/v2
# Note: Rarely needs changing unless Kick changes their API endpoint
KICK_API_BASE_URL=https://kick.com/api/v2

# Security Configuration
# Secret for session encryption
# Example: random_secure_string_here
# How to generate: Use a secure random generator
SESSION_SECRET=your_session_secret_here

# Secret for cookie encryption
# Example: another_random_secure_string
# Security note: Use a different value than SESSION_SECRET
COOKIE_SECRET=your_cookie_secret_here

# Webhook Configuration (Optional)
# URL for receiving Kick webhooks
# Example: https://your-domain.com/webhooks/kick
# Note: Must be publicly accessible
WEBHOOK_URL=https://your-domain.com/webhooks/kick

# Secret for validating webhook requests
# Example: webhook_verification_secret
# Security note: Used to verify webhook requests come from Kick
WEBHOOK_SECRET=your_webhook_secret_here