name: kick-mcp
version: 1.0.0
description: A secure MCP server for the Kick streaming platform API

# Build configuration
build:
  dockerfile: Dockerfile
  dockerBuildPath: .

# Server configuration
startCommand:
  type: stdio
  configSchema:
    type: object
    required:
      - kickApiKey
    properties:
      kickApiKey:
        type: string
        description: API key for Kick platform authentication
      port:
        type: integer
        description: Port number for the server
        default: 3001
      logLevel:
        type: string
        description: Logging level
        enum: [debug, info, warn, error]
        default: info
  commandFunction: |
    (config) => ({
      command: "node",
      args: ["dist/index.js"],
      env: {
        NODE_ENV: "production",
        KICK_API_KEY: config.kickApiKey,
        PORT: config.port,
        LOG_LEVEL: config.logLevel
      }
    })

# Server metadata
metadata:
  capabilities:
    - chat
    - channels
    - streams
    - users
    - moderation
    - webhooks
    - websocket
  security:
    authentication: required
    rateLimiting: enabled
    caching: enabled
    errorHandling: enabled
  protocols:
    - http
    - websocket
  healthCheck:
    endpoint: /health
    interval: 30s
    timeout: 3s
  logging:
    level: info
    format: json
    transport: console
  initialization:
    method: initialize
    publicAccess: true
    endpoints:
      - path: /tools/list
        public: true
        description: List all available tools without authentication
      - path: /initialize
        public: true
        description: Initialize the server without authentication
  storage:
    type: ephemeral
    note: "Persistent data requires external database"
  websocket:
    reconnect: true
    maxRetries: 5
    backoff: exponential
    sessionAffinity: true
    idleTimeout: 5m 